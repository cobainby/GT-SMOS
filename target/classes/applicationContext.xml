<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		classpath:org/springframework/beans/factory/xml/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop 
		classpath:org/springframework/aop/config/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context 
		classpath:org/springframework/context/config/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc 
		classpath:org/springframework/web/servlet/config/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/tx 
		classpath:org/springframework/transaction/config/spring-tx-4.0.xsd">

	<!-- 配置spring扫描的包 -->
	<context:component-scan base-package="com.southgt.smosplat.*.service.impl,com.southgt.smosplat.*.dao.impl,com.southgt.smosplat.*.*.service.impl,com.southgt.smosplat.*.*.dao.impl,com.southgt.smosplat.*.*.*.service.impl,com.southgt.smosplat.*.*.*.dao.impl"></context:component-scan>	
	<!-- 配置c3p0数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!--property name="jdbcUrl" value="jdbc:oracle:thin:@172.16.50.76:1521:ORCLNFGT" /-->
<!-- 		<property name="jdbcUrl" value="jdbc:mysql://183.63.173.99:3306/smosplat" /> -->
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/smosplat_test" />
<!-- 		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/smosplat" /> -->
<!-- 		<property name="jdbcUrl" value="jdbc:mysql://183.63.173.99:3306/smosplat_test" /> -->
		<!--<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" /> -->
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="user" value="root" />
		<property name="password" value="south" />
		<!--连接池中保留的最大连接数。Default: 15 -->
<!-- 		<property name="maxPoolSize" value="30" /> -->
		<!--连接池中保留的最小连接数。 -->
<!-- 		<property name="minPoolSize" value="10" /> -->
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
<!-- 		<property name="initialPoolSize" value="10" /> -->
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
<!-- 		<property name="maxIdleTime" value="1800" /> -->
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
<!-- 		<property name="acquireIncrement" value="3" /> -->
		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。 
			如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
<!-- 		<property name="maxStatements" value="0" /> -->
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="600" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
<!-- 		<property name="acquireRetryAttempts" value="30" /> -->
		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试 
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
<!-- 		<property name="breakAfterAcquireFailure" value="true" /> -->
		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable 
			等方法来提升连接测试的性能。Default: false -->
<!-- 		<property name="testConnectionOnCheckout" value="false" /> -->
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置去哪个包下面扫描实体 -->
		<property name="packagesToScan">
			<list>
				<value>com.southgt.smosplat.common.entity</value>
				<value>com.southgt.smosplat.organ.entity</value>
				<value>com.southgt.smosplat.account.entity</value>
				<value>com.southgt.smosplat.project.entity</value>
				<value>com.southgt.smosplat.data.entity</value>
			</list>
		</property>
		<!-- 配置hibernate的属性 -->
		<property name="hibernateProperties">
			<props>
<!-- 				<prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop> -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cahe">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
			</props>
		</property>
	</bean>
	
	<!-- 事务管理器，在service层面上实现事务管理 -->
	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 配置事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 读操作 -->
			<tx:method name="find*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
			<tx:method name="get*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
			<tx:method name="load*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
			<!-- 写操作 -->
			<tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT"/>
			<tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT"/>
			<tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT"/>
			<tx:method name="batch*" propagation="REQUIRED" isolation="DEFAULT"/>
			
			<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT"/>
		</tx:attributes>
	</tx:advice>
	<!-- 配置切入点 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* *..*Service.*(..))"/>
	</aop:config>
		<!-- 多部分文件上传 -->
	<!-- 文件上传的配置 -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">     
       <!-- 指定所上传文件的总大小不能超过4000KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->    
       <property name="defaultEncoding" value="utf-8" />   
       <property name="maxUploadSize" value="4000000"/>     
   </bean>
   <bean id="uploadProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">  
       <property name="locations">  
           <list>  
               <value>classpath:uploadSrc.properties</value>  
           </list>  
       </property>  
    </bean>  
       <bean id="iisIpHostProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">  
       <property name="locations">  
           <list>  
               <value>classpath:iisIpHost.properties</value>  
           </list>  
       </property>  
    </bean>  
    <bean id="propertyConfigurer2" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">  
        <property name="properties" ref="uploadProperties" />  
    </bean>   
</beans>
